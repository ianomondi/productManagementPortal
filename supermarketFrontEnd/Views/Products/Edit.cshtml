@using supermarketFrontEnd.Models
@model supermarketFrontEnd.Models.ViewModels.CreateProductViewModel



@{
    ViewBag.Title = "Edit product";
    ViewBag.PageTitle = "Edit product";
    ViewBag.PageSubTitle = "Product Form";

    IEnumerable<Category> categories = ViewBag.Categories as IEnumerable<Category>;

    List<SelectListItem> categoriesList = new List<SelectListItem>();

    if (categories != null)
    {
        foreach (var category in categories)
        {
            categoriesList.Add(new SelectListItem { Text = category.name, Value = $"{category.id}" });
        }
    }


}




@section BreadCrumbs{

    <li class="breadcrumb-item">
        @Html.ActionLink("Dashboard", "Dashboard", "Home")
    </li>
    <li class="breadcrumb-item">
        @Html.ActionLink("Products List", "Index", "Products")
    </li>
    <li class="breadcrumb-item">
        <a href="#">@ViewBag.Title</a>
    </li>
}



<div class="card">
    <div class="card-header">
        <h5>@ViewBag.Title</h5>

        <span>Product form</span>
    </div>
    <div class="card-block table-border-style">

        @using (Html.BeginForm("Edit", "Products", FormMethod.Post, htmlAttributes: new { @class = "" }))
        {
            @Html.AntiForgeryToken()


            <div>
                @Html.HiddenFor(m => m.id)
            </div>


            <div class="row">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-12" })
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @required = true } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="row">


                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-12" })
                    @Html.DropDownListFor(m => m.category.id, categoriesList, null, htmlAttributes: new { @class = "form-control", required = true })
                    @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.sku.unitPrice, htmlAttributes: new { @class = "control-label col-md-12" })
                    @Html.EditorFor(model => model.sku.unitPrice, new { htmlAttributes = new { @class = "form-control", @required = true, type = "number", min = 0 } })
                    @Html.ValidationMessageFor(model => model.sku.unitPrice, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.sku.unitOfMeasure, htmlAttributes: new { @class = "control-label col-md-12" })
                    @Html.EditorFor(model => model.sku.unitOfMeasure, new { htmlAttributes = new { @class = "form-control", @required = true } })
                    @Html.ValidationMessageFor(model => model.sku.unitOfMeasure, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.sku.quantity, htmlAttributes: new { @class = "control-label col-md-12" })
                    @Html.EditorFor(model => model.sku.quantity, new { htmlAttributes = new { @class = "form-control", @required = true } })
                    @Html.ValidationMessageFor(model => model.sku.quantity, "", new { @class = "text-danger" })
                </div>


            </div>

            if (Model.variants != null && Model.variants.Count > 0)
            {
                <div class="row mb-3">
                    @Html.Partial("_AddProductVariantPartial", Model)
                </div>
            }


            if (Model.relatedProducts != null && Model.relatedProducts.Count > 0)
            {
                <div class="row">
                    @Html.Partial("_AddCompositeProducts", Model)
                </div>
            }










            <div class="form-group mb-2">
                <input type="submit" value="Update" class="btn btn-primary btn-sm" />
            </div>
        }


        <hr class="mt-3" />
        <div class="d-flex justify-content-start">
            <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-dark">
                <i class="fa fa-list-ol"></i>
                Back to List
            </a>
        </div>

    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function () {
            var select2multi = $('.multi_select').select2({
                multiple: true
            });

            var selectedComposites = $('.multi_select').data("values").split(",");

            select2multi.val(selectedComposites);
            select2multi.trigger("change");


        });

    </script>


}




